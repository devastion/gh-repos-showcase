{"mappings":"0BW0EwB,eAAe","sources":["src/src/components/Wrapper/Wrapper.tsx","src/src/components/Wrapper/index.tsx","src/src/components/RepoCardContainer/lighten-color.ts","src/src/components/RepoCardContainer/RepoCardContainer.tsx","src/src/components/RepoCardContainer/index.tsx","src/src/components/RepoCardTitles/RepoCardTitles.tsx","src/src/components/RepoCardTitles/index.tsx","src/src/components/RepoCardButton/RepoCardButton.tsx","src/src/components/RepoCardButton/index.tsx","src/src/components/RepoCard/RepoCard.tsx","src/src/components/RepoCard/index.tsx","src/src/GHReposShowcase.tsx","src/GHReposShowcase.tsx"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,"import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { Container, Wrapper } from \"./components/Wrapper\";\nimport RepoCard from \"./components/RepoCard\";\n\n// ? CSS RESET\nconst GlobalStyles = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n`;\n\nexport type languageColorsObject = {\n  [key: string]: string;\n};\n\nexport interface ComponentOptions {\n  username: string;\n  titleColor?: string;\n  descriptionColor?: string;\n  backgroundColor?: string;\n  languagesColors?: languageColorsObject;\n}\n\nconst componentOptions: ComponentOptions = {\n  username: \"\",\n  titleColor: \"\",\n  descriptionColor: \"\",\n  backgroundColor: \"\",\n  languagesColors: {},\n};\n\nexport const Options = React.createContext<ComponentOptions>(componentOptions);\n\nexport default function GHReposShowcase({\n  username,\n  titleColor,\n  descriptionColor,\n  backgroundColor,\n  languagesColors,\n}: ComponentOptions) {\n  const userOptions = React.useMemo(\n    () => ({\n      username,\n      titleColor,\n      descriptionColor,\n      backgroundColor,\n      languagesColors,\n    }),\n    []\n  );\n\n  return (\n    <Options.Provider value={userOptions}>\n      <Container>\n        <Wrapper>\n          <RepoCard />\n        </Wrapper>\n      </Container>\n      <GlobalStyles />\n    </Options.Provider>\n  );\n}\nGHReposShowcase.defaultProps = {\n  titleColor: \"\",\n  descriptionColor: \"\",\n  backgroundColor: \"\",\n  languagesColors: {\n    TypeScript: \"#5ccfe6\",\n    JavaScript: \"#ef6b73\",\n    PHP: \"#c3a6ff\",\n    Vue: \"#41b380\",\n    HTML: \"#eab676\",\n    Python: \"#ef4528\",\n    Java: \"#edd157\",\n  },\n};\n"],"names":[],"version":3,"file":"types.d.ts.map"}